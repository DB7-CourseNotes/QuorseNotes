[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto Course Notes",
    "section": "",
    "text": "Introduction"
  },
  {
    "objectID": "index.html#this-is-the-quarto-book",
    "href": "index.html#this-is-the-quarto-book",
    "title": "Quarto Course Notes",
    "section": "This is the Quarto Book!",
    "text": "This is the Quarto Book!\nRendered via:\nquarto render --profile book"
  },
  {
    "objectID": "L01.html#slides-first-mentality",
    "href": "L01.html#slides-first-mentality",
    "title": "1  Setup Justification",
    "section": "1.1 Slides-first mentality",
    "text": "1.1 Slides-first mentality\n_quarto.yml assumes that the format is going to be beamer slides. This is because I use VSCode to make my slides, and Cmd-Shift-K will build according to the _quarto.yml file. This means I prototype my notes as slides, then just kinda assume that the book will look good.\nThe _quarto-book.yml has a special name. The -book part tells quarto that it’s part of the “Book” project."
  },
  {
    "objectID": "L01.html#rendering-the-book",
    "href": "L01.html#rendering-the-book",
    "title": "1  Setup Justification",
    "section": "1.2 Rendering the Book",
    "text": "1.2 Rendering the Book\nquarto render --profile book\nAlternately,\nquarto preview --profile book"
  },
  {
    "objectID": "L01.html#conditional-render-by-project",
    "href": "L01.html#conditional-render-by-project",
    "title": "1  Setup Justification",
    "section": "1.3 Conditional Render by Project",
    "text": "1.3 Conditional Render by Project\nThe following allows for different content in the slides versus the book.\n::: {.content-visible when-profile=\"book\"}\nContent here will only be visible when rendered using --profile book\n:::\n::: {.content-visible unless-profile=\"book\"}\nContent here will only be visible when **not** rendered using --profile book\n:::\nNotice that both of these are defined in .vscode/quarto-bookslides.code-snippets, and thus can be easily inserted when editing with VSCode (I’m not sure of an equivalent workflow in RStudio, but I’m sure it exists)."
  },
  {
    "objectID": "L01.html#publishing-on-github",
    "href": "L01.html#publishing-on-github",
    "title": "1  Setup Justification",
    "section": "1.4 Publishing on GitHub",
    "text": "1.4 Publishing on GitHub\nThe _quarto-book.yml file puts the book in the “docs” folder, and GitHub allows you to serve a static site from the docs/ folder. The output-dir: docs in _quarto-book.yml is required!\nOn GitHub, go to Settings -&gt; Pages and tell it to serve the site from docs/.\nThat’s it! There are no other steps to getting your book as a github website! You’re done!"
  },
  {
    "objectID": "L02-quarto-yml.html",
    "href": "L02-quarto-yml.html",
    "title": "2  The _quarto.yml file",
    "section": "",
    "text": "Let’s go through the file line-by-line.\nproject:\n  output-dir: Slides\n\ndate-fromat: iso\ndate: \"last-modified\"\nauthor: \"Dr. Devan Becker\"\ninstitute: \"Wilfrid Laurier University\"\n\nproject: defines the project-wide options.\n\noutput-dir: Slides puts the output pdfs when not rendering a book into the Slides/ folder.\n\ndate-format to institute are self-explanatory.\n\nexecute:\n  warning: false\n  cache: true\n  freeze: auto\n\nThe execute options will apply to everything (I think - doesn’t work for all options).\n\nformat: \n  beamer:\n    theme: Madrid\n    colortheme: PrimaryBullets\n    aspectratio: 169\n    toc: false\n    include-in-header: \"defs_beamer.tex\"\n    execute:\n      echo: false\n      fig-width: 7\n      fig-height: 3.5\n      code-line-numbers: false\n\nformat defines the format, but only when the profile is not set to book.\n\nbeamer produces pdf slides, using the \\(\\LaTeX\\) beamer class. If this is unfamiliar to you, you can change this to be html slides. The code used for conditional inclusion is based on the profile, not the output format.\n\ntheme: Madrid is specific to the beamer class.\ncolortheme: PrimaryBullets uses my custom beamer colortheme (which also affects the theme. this is bad programming on my part, but it looks nice). If you use this, you should change the name, institution, and email in the definition!\naspectratio and toc (table of contents), are beamer specific settings.\ninclude-in-header uses a custom \\(\\LaTeX\\) definition file for spacing in books versus slides. See below.\nexecute makes figures the right size for 16x9 slides. It also makes echo false by default (the book uses true by default).\n\n\n\nFor include-in-header: defs_beamer.tex, I use two special commands to make sure that I can control spacing in the slides and the book separately. In slides, I want to add spacing between lists. The \\lspace command is defined as \\newline if the file is executed without profile --book, and it’s defined as nothing if the profile is set to book. Similarly, \\pspace adds a space between paragraphs if the book is rendering to slides and does nothing for the book."
  },
  {
    "objectID": "L03-quarto-book-yml.html",
    "href": "L03-quarto-book-yml.html",
    "title": "3  The _quarto-book.yml file",
    "section": "",
    "text": "There’s a lot more going on in this file!\nproject:\n  type: book\n  output-dir: docs\n\nnumber-depth: 2\nbook:\n  title: \"Quarto Course Notes\"\n  subtitle: \"Slides and a Book\"\n  repo-url: https://github.com/DB7-CourseNotes/QuorseNotes\n  repo-actions: [issue, source]  \n  page-footer:\n    left: |\n      Copyright Devan Becker, released under Creative Commons Attribution-ShareAlike 4.0.\n  sidebar: \n    collapse-level: 2\n  page-navigation: true\n  chapters:\n    - index.qmd\n    - part: Setup\n      chapters:\n        - L01.qmd\n    - part: Slides and Book\n      chapters:\n        - L02-quarto-yml.qmd\n        - L03-quarto-book-yml.qmd\n  appendices:\n    - Lab01.qmd\nformat:\n  html:\n    theme:\n      light: [sandstone, smaller_lists.scss]\n      dark: [superhero, smaller_lists.scss]\n    mainfont: ubuntu, sans-serif\n    execute:\n      echo: true\n      code-fold: true"
  },
  {
    "objectID": "L05-advanced.html#shinylive",
    "href": "L05-advanced.html#shinylive",
    "title": "4  Some advanced things",
    "section": "4.1 ShinyLive",
    "text": "4.1 ShinyLive\nShiny Live allows shiny apps to be run from within the book - without storing the book on a shiny server!\nEvery time the user opens your book, the shiny app installs all of the required packages. For best results, keep packages to a minimum.\n(This repo does not have an example because the extension adds dependencies. I’ll maybe make another repo just to outline the steps I needed to take.)"
  },
  {
    "objectID": "L05-advanced.html#quizzes-for-your-lms",
    "href": "L05-advanced.html#quizzes-for-your-lms",
    "title": "4  Some advanced things",
    "section": "4.2 Quizzes for your LMS",
    "text": "4.2 Quizzes for your LMS\nIn my slides, I include something like:\n## Q1\n\nWhich of the following statements is *False*?\n\na. True\nb. False\n\n&lt;!--- B ---&gt;\nA custom R script extracts the “B” from the comment string, then formats an MC question according to my LMS.\nThe question is shown only on the slides, students answer on the LMS.\nThis is specific to the way I do things, but it has saved quite a bit of time and lets me do quizzes tied to their student numbers without an external tool."
  },
  {
    "objectID": "L05-advanced.html#partially-populated-slides-with-full-notes",
    "href": "L05-advanced.html#partially-populated-slides-with-full-notes",
    "title": "4  Some advanced things",
    "section": "4.3 Partially Populated Slides with Full Notes",
    "text": "4.3 Partially Populated Slides with Full Notes\n\nSys.getenv(\"QUARTO_PROFILE\")\n\n[1] \"book\"\n\n\nUsing the profile in R:\n\nblank &lt;- function(x) {\n    if(Sys.getenv(\"QUARTO_PROFILE\") == \"book\") {\n        return(x)\n    } else {\n        return(\"________\")\n    }\n}\n\nForgetful Sally was so forgetful that when she tried to remember something she drew a blank."
  },
  {
    "objectID": "Lab01-R.html",
    "href": "Lab01-R.html",
    "title": "Appendix A — R Lab 1",
    "section": "",
    "text": "plot(mpg ~ wt, data = mtcars)"
  },
  {
    "objectID": "Lab02-Python.html",
    "href": "Lab02-Python.html",
    "title": "Appendix B — Python Lab 1",
    "section": "",
    "text": "import numpy as np\nfrom sklearn.linear_model import LinearRegression\nimport matplotlib.pyplot as plt\n\n\nx = np.random.uniform(0, 10, 50)\ne = np.random.normal(0, 3, x.size)\ny = 12 - 5 * x + e\n\nplt.scatter(x, y)\nplt.show()"
  },
  {
    "objectID": "DGBecker_QuorseNotes.html#introduction",
    "href": "DGBecker_QuorseNotes.html#introduction",
    "title": "Appendix C — Quorse Notes",
    "section": "C.1 Introduction",
    "text": "C.1 Introduction\n\nOverview\n\nThese are slides… or are they?\n\nIf you’re reading this, the answer is no! This is a portion that is only visible when compiled as a book!\n\n\nWorkflow Preview\nOnce everything is set up:\n\nMake slides (or adapt from elsewhere)\nAdd in participation activities\nDo some live demonstrations in class\nPush to GitHub after class\n\nEverything is now available to the students\n\n\n\n\nMain Benefits\n\nOpen source and reproducible\nEasy to use, searchable book for students including all information from class\nOne extra step on top of Quarto slides!"
  },
  {
    "objectID": "DGBecker_QuorseNotes.html#introduction-to-quarto",
    "href": "DGBecker_QuorseNotes.html#introduction-to-quarto",
    "title": "Appendix C — Quorse Notes",
    "section": "C.2 Introduction to Quarto",
    "text": "C.2 Introduction to Quarto\n\nqmd versus Rmd\nIf you rename myfile.Rmd to myfile.qmd, it works exactly the same.\nqmd is the next generation of RMarkdown.\n\nMore code options\nMore output options\nMore language options (python, julia, lua, etc.)\nMore editor options\n\n\n\nThe General Quarto Idea\nOne input file, many outputs.\nQuarto accepts .qmd, .Rmd, and .ipynb as input files!"
  },
  {
    "objectID": "DGBecker_QuorseNotes.html#setup-steps",
    "href": "DGBecker_QuorseNotes.html#setup-steps",
    "title": "Appendix C — Quorse Notes",
    "section": "C.3 Setup Steps",
    "text": "C.3 Setup Steps\n\nThe YAML files\n\nslides\nbook\n\nmost of the magic is here\n\n\n\n\nGitHub Pages\n\nUnder Settings -&gt; Pages, set output directory to /docs.\n\nTell quarto to render to docs\nCommit!"
  },
  {
    "objectID": "DGBecker_QuorseNotes.html#authoring",
    "href": "DGBecker_QuorseNotes.html#authoring",
    "title": "Appendix C — Quorse Notes",
    "section": "C.4 Authoring",
    "text": "C.4 Authoring\n\nConditional Rendering\n\n\nPreviewing"
  }
]